Namespaces:
  =: io.murano.resources
  sys: io.murano.system
  std: io.murano

Name: ConfLangInstance

Extends:
  - LinuxInstance

Methods:
 prepareUserData:
    Body:
      - $environment: $.find(std:Environment).require()
      - $resources: new(sys:Resources)
      - $configFile: $resources.string('Agent-v2.template')
      - $initScript: $resources.string('linux-init.sh')
      - $muranoScript: $resources.string('murano-init.sh')
      - $conf_langScript: $resources.string('conf_lang.sh')
      - $configReplacements:
          "%RABBITMQ_HOST%": config(rabbitmq, host)
          "%RABBITMQ_PORT%": config(rabbitmq, port)
          "%RABBITMQ_USER%": config(rabbitmq, login)
          "%RABBITMQ_PASSWORD%": config(rabbitmq, password)
          "%RABBITMQ_VHOST%": config(rabbitmq, virtual_host)
          "%RABBITMQ_SSL%": str(config(rabbitmq, ssl)).toLower()
          "%RABBITMQ_INPUT_QUEUE%": $.agent.queueName()
          "%RESULT_QUEUE%": $environment.agentListener.queueName()
      - $scriptReplacements:
          "%AGENT_CONFIG_BASE64%": base64encode($configFile.replace($configReplacements))
          "%INTERNAL_HOSTNAME%": $.name
          "%MURANO_SERVER_ADDRESS%": coalesce(config(file_server), config(rabbitmq, host))
          "%CA_ROOT_CERT_BASE64%": ""
      - $initRepla:  $initScript.replace($scriptReplacements)


      - Return:
          data: $muranoScript + $conf_langScript +  $initRepla 
          format: HEAT_CFNTOOLS


